syntax = "proto3";

option csharp_namespace = "NewMission.Protos";

package missionservices;

// The greeting service definition.
service MissionOptions
{
	rpc AddMission(AddMissionRequest) returns (AddMissionReply);
    rpc ReadMission(ReadMissionRequest) returns (ReadMissionReply);
    rpc UpdateMission(UpdateMissionRequest) returns (UpdateMissionReply);
    rpc DeleteMission(DeleteMissionRequest) returns (DeleteMissionReply);
    rpc ShowAllMission(ShowAllMissionRequest) returns (ShowAllMissionReply);
}

message AddMissionRequest
{
    int32 projectId=1;
	string title = 2;     
    string description = 3;
    //Status(Pending / InProgress / Done)
    string status = 4;
    //Priority(Low / Medium / High)
    string priority = 5; 
    string dueDate =6;

}
message AddMissionReply
{
    int32 projectId=1;
    string title=2;

}
message ReadMissionRequest
{
    int32 project_id=1;
    int32 mission_id=2;
}
message ReadMissionReply
{
    int32 project_id=1;
    int32 mission_id=2;
    string title = 3;     
    string description = 4;
    //Status(Pending / InProgress / Done)
    string status = 5;
    //Priority(Low / Medium / High)
    string priority = 6; 
    string dueDate =7; 
}
message UpdateMissionRequest
{
     int32 project_id=1;
    int32 mission_id=2;
    string title = 3;     
    string description = 4;
    //Status(Pending / InProgress / Done)
    string status = 5;
    //Priority(Low / Medium / High)
    string priority = 6; 
    string dueDate =7; 
}
message UpdateMissionReply
{
    int32 project_id=1;
    int32 mission_id=2;
}
// Delete a mission 
message DeleteMissionRequest
{
    int32 mission_id=1;
    int32 project_id=2;
}
message DeleteMissionReply
{
    string mission_title=1;
    string project_title=2;
}
//Show all missions 
message ShowAllMissionRequest
{
    int32 project_id=1;
}
message ShowAllMissionReply
{
    
    repeated ReadMissionReply misson_read =1;
}