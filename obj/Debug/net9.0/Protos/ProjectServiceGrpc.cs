// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Protos/project_service.proto
// </auto-generated>
#pragma warning disable 0414, 1591, 8981, 0612
#region Designer generated code

using grpc = global::Grpc.Core;

namespace NewMission.Protos {
  /// <summary>
  /// The greeting service definition.
  /// </summary>
  public static partial class ProjectOptions
  {
    static readonly string __ServiceName = "projectservices.ProjectOptions";

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static void __Helper_SerializeMessage(global::Google.Protobuf.IMessage message, grpc::SerializationContext context)
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (message is global::Google.Protobuf.IBufferMessage)
      {
        context.SetPayloadLength(message.CalculateSize());
        global::Google.Protobuf.MessageExtensions.WriteTo(message, context.GetBufferWriter());
        context.Complete();
        return;
      }
      #endif
      context.Complete(global::Google.Protobuf.MessageExtensions.ToByteArray(message));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static class __Helper_MessageCache<T>
    {
      public static readonly bool IsBufferMessage = global::System.Reflection.IntrospectionExtensions.GetTypeInfo(typeof(global::Google.Protobuf.IBufferMessage)).IsAssignableFrom(typeof(T));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static T __Helper_DeserializeMessage<T>(grpc::DeserializationContext context, global::Google.Protobuf.MessageParser<T> parser) where T : global::Google.Protobuf.IMessage<T>
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (__Helper_MessageCache<T>.IsBufferMessage)
      {
        return parser.ParseFrom(context.PayloadAsReadOnlySequence());
      }
      #endif
      return parser.ParseFrom(context.PayloadAsNewBuffer());
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::NewMission.Protos.CreateProjectRequest> __Marshaller_projectservices_CreateProjectRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::NewMission.Protos.CreateProjectRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::NewMission.Protos.CreateProjectReply> __Marshaller_projectservices_CreateProjectReply = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::NewMission.Protos.CreateProjectReply.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::NewMission.Protos.ReadProjectRequest> __Marshaller_projectservices_ReadProjectRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::NewMission.Protos.ReadProjectRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::NewMission.Protos.ReadProjectReply> __Marshaller_projectservices_ReadProjectReply = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::NewMission.Protos.ReadProjectReply.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::NewMission.Protos.UpdateProjectRequest> __Marshaller_projectservices_UpdateProjectRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::NewMission.Protos.UpdateProjectRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::NewMission.Protos.UpdateProjectReply> __Marshaller_projectservices_UpdateProjectReply = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::NewMission.Protos.UpdateProjectReply.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::NewMission.Protos.DeleteProjectRequest> __Marshaller_projectservices_DeleteProjectRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::NewMission.Protos.DeleteProjectRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::NewMission.Protos.DeleteProjectReply> __Marshaller_projectservices_DeleteProjectReply = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::NewMission.Protos.DeleteProjectReply.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::NewMission.Protos.ShowAllRequest> __Marshaller_projectservices_ShowAllRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::NewMission.Protos.ShowAllRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::NewMission.Protos.ShowAllReply> __Marshaller_projectservices_ShowAllReply = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::NewMission.Protos.ShowAllReply.Parser));

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::NewMission.Protos.CreateProjectRequest, global::NewMission.Protos.CreateProjectReply> __Method_CreateProject = new grpc::Method<global::NewMission.Protos.CreateProjectRequest, global::NewMission.Protos.CreateProjectReply>(
        grpc::MethodType.Unary,
        __ServiceName,
        "CreateProject",
        __Marshaller_projectservices_CreateProjectRequest,
        __Marshaller_projectservices_CreateProjectReply);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::NewMission.Protos.ReadProjectRequest, global::NewMission.Protos.ReadProjectReply> __Method_ReadProject = new grpc::Method<global::NewMission.Protos.ReadProjectRequest, global::NewMission.Protos.ReadProjectReply>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ReadProject",
        __Marshaller_projectservices_ReadProjectRequest,
        __Marshaller_projectservices_ReadProjectReply);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::NewMission.Protos.UpdateProjectRequest, global::NewMission.Protos.UpdateProjectReply> __Method_UpdateProject = new grpc::Method<global::NewMission.Protos.UpdateProjectRequest, global::NewMission.Protos.UpdateProjectReply>(
        grpc::MethodType.Unary,
        __ServiceName,
        "UpdateProject",
        __Marshaller_projectservices_UpdateProjectRequest,
        __Marshaller_projectservices_UpdateProjectReply);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::NewMission.Protos.DeleteProjectRequest, global::NewMission.Protos.DeleteProjectReply> __Method_DeleteProject = new grpc::Method<global::NewMission.Protos.DeleteProjectRequest, global::NewMission.Protos.DeleteProjectReply>(
        grpc::MethodType.Unary,
        __ServiceName,
        "DeleteProject",
        __Marshaller_projectservices_DeleteProjectRequest,
        __Marshaller_projectservices_DeleteProjectReply);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::NewMission.Protos.ShowAllRequest, global::NewMission.Protos.ShowAllReply> __Method_ShowAll = new grpc::Method<global::NewMission.Protos.ShowAllRequest, global::NewMission.Protos.ShowAllReply>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ShowAll",
        __Marshaller_projectservices_ShowAllRequest,
        __Marshaller_projectservices_ShowAllReply);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::NewMission.Protos.ProjectServiceReflection.Descriptor.Services[0]; }
    }

    /// <summary>Base class for server-side implementations of ProjectOptions</summary>
    [grpc::BindServiceMethod(typeof(ProjectOptions), "BindService")]
    public abstract partial class ProjectOptionsBase
    {
      /// <summary>
      ///Project rpc 
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::NewMission.Protos.CreateProjectReply> CreateProject(global::NewMission.Protos.CreateProjectRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::NewMission.Protos.ReadProjectReply> ReadProject(global::NewMission.Protos.ReadProjectRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::NewMission.Protos.UpdateProjectReply> UpdateProject(global::NewMission.Protos.UpdateProjectRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::NewMission.Protos.DeleteProjectReply> DeleteProject(global::NewMission.Protos.DeleteProjectRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::NewMission.Protos.ShowAllReply> ShowAll(global::NewMission.Protos.ShowAllRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public static grpc::ServerServiceDefinition BindService(ProjectOptionsBase serviceImpl)
    {
      return grpc::ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_CreateProject, serviceImpl.CreateProject)
          .AddMethod(__Method_ReadProject, serviceImpl.ReadProject)
          .AddMethod(__Method_UpdateProject, serviceImpl.UpdateProject)
          .AddMethod(__Method_DeleteProject, serviceImpl.DeleteProject)
          .AddMethod(__Method_ShowAll, serviceImpl.ShowAll).Build();
    }

    /// <summary>Register service method with a service binder with or without implementation. Useful when customizing the service binding logic.
    /// Note: this method is part of an experimental API that can change or be removed without any prior notice.</summary>
    /// <param name="serviceBinder">Service methods will be bound by calling <c>AddMethod</c> on this object.</param>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public static void BindService(grpc::ServiceBinderBase serviceBinder, ProjectOptionsBase serviceImpl)
    {
      serviceBinder.AddMethod(__Method_CreateProject, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::NewMission.Protos.CreateProjectRequest, global::NewMission.Protos.CreateProjectReply>(serviceImpl.CreateProject));
      serviceBinder.AddMethod(__Method_ReadProject, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::NewMission.Protos.ReadProjectRequest, global::NewMission.Protos.ReadProjectReply>(serviceImpl.ReadProject));
      serviceBinder.AddMethod(__Method_UpdateProject, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::NewMission.Protos.UpdateProjectRequest, global::NewMission.Protos.UpdateProjectReply>(serviceImpl.UpdateProject));
      serviceBinder.AddMethod(__Method_DeleteProject, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::NewMission.Protos.DeleteProjectRequest, global::NewMission.Protos.DeleteProjectReply>(serviceImpl.DeleteProject));
      serviceBinder.AddMethod(__Method_ShowAll, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::NewMission.Protos.ShowAllRequest, global::NewMission.Protos.ShowAllReply>(serviceImpl.ShowAll));
    }

  }
}
#endregion
